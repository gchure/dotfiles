###Griffin Chure's matplotlib.rc file.
#### CONFIGURATION BEGINS HERE
backend      : MacOSX  #Default backend.

############################LINES####################################################################
lines.linewidth   : 2.0     		# line width in points
lines.color       : black               # default color
lines.linestyle   : -       		# solid line
lines.marker      : None    		# the default marker
lines.markeredgewidth  : 0.5     	# the line width around the marker symbol
lines.markersize  : 6            	# markersize, in points
lines.dash_joinstyle : miter        	# miter|round|bevel
lines.dash_capstyle : butt          	# butt|round|projecting
lines.solid_joinstyle : miter       	# miter|round|bevel
lines.solid_capstyle : projecting   	# butt|round|projecting
lines.antialiased : True         	# render lines in antialised (no jaggies)

#############################PATCHES#################################################################
patch.linewidth   	: 1.0     	# edge width in points
patch.facecolor  	: blue
patch.edgecolor  	: black
patch.antialiased 	: True    	# render patches in antialised (no jaggies)

### FONT
font.family         : sans-serif
font.style          : normal
font.variant        : normal
font.weight         : medium
font.stretch        : normal

font.size           : medium
font.sans-serif     : Bitstream Vera Sans, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif

#Garbage I don't care about too much. 

### AXES
axes.hold           : True    		# whether to clear the axes by default on
axes.facecolor      : white   		# axes background color
axes.edgecolor      : black   		# axes edge color
axes.linewidth      : 1.0     		# edge linewidth
axes.grid           : False   		# display grid or not
axes.titlesize      : large   		# fontsize of the axes title
axes.labelsize      : large  		# fontsize of the x and y labels
axes.labelcolor     : black
axes.axisbelow      : False   		# whether axis gridlines and ticks are below
                              		# the axes elements (lines, text, etc)

axes.formatter.limits : -7, 7 		# use scientific notation if log10
                               		# of the axis range is smaller than the
                               		# first or larger than the second
axes.unicode_minus  : True    		# use unicode for the minus symbol
axes.color_cycle     : 1F78B4, 33A02C, CC0099, 6A3D9A, FF7F00, A6CEE3, B2DF8A, FF99FF, CAB2D6, FDBF6F
polaraxes.grid      : True    		# display grid on polar axes
axes.xmargin         : 0.02  		# x margin.  See `axes.Axes.margins`
axes.ymargin         : 0.02  		# y margin See `axes.Axes.margins`

#################################TICKS###########################################################
xtick.major.size     : 4      		# major tick size in points
xtick.minor.size     : 2      		# minor tick size in points
xtick.major.pad      : 4      		# distance to major tick label in points
xtick.minor.pad      : 4      		# distance to the minor tick label in points
xtick.color          : k      		# color of the tick labels
xtick.labelsize      : medium 		# fontsize of the tick labels
xtick.direction       : out     	# direction: in or out

ytick.major.size     : 4      		# major tick size in points
ytick.minor.size     : 2      		# minor tick size in points
ytick.major.pad      : 4      		# distance to major tick label in points
ytick.minor.pad      : 4      		# distance to the minor tick label in points
ytick.color          : k      		# color of the tick labels
ytick.labelsize      : medium 		# fontsize of the tick labels
ytick.direction       : out   		# direction: in or out

### GRIDS
grid.color       :   black   		# grid color
grid.linestyle   :   :       		# dotted
grid.linewidth   :   0.5     		# in points

### Legend
legend.fancybox      : True  		# if True, use a rounded box for the
                               		# legend, else a rectangle
legend.isaxes        : True
legend.numpoints     : 1      		# the number of points in the legend line
legend.fontsize      : medium
legend.borderpad      : 0.2    		# border whitespace in fontsize units
legend.handletextpad  : 0.2
legend.markerscale   : 1.0    		# the relative size of legend markers vs. original

# the following dimensions are in axes coords
legend.labelsep      : 0.010  		# the vertical space between the legend entries
legend.handlelen     : 0.05   		# the length of the legend lines
legend.handletextsep : 0.02   		# the space between the legend line and legend text
legend.axespad       : 0.02   		# the border between the axes and legend edge
legend.shadow        : False

### FIGURE
# See http://matplotlib.sourceforge.net/api/figure_api.html#matplotlib.figure.Figure
figure.figsize   : 8, 6  		# figure size in inches
figure.dpi       : 80      		# figure dots per inch. Not for saving
figure.facecolor : 0.75    		# figure facecolor; 0.75 is scalar gray
figure.edgecolor : white   		# figure edgecolor

# The figure subplot parameters.  All dimensions are fraction of the
# figure width or height
figure.subplot.left	: 0.125  	# the left side of the subplots of the figure
figure.subplot.right	: 0.9    	# the right side of the subplots of the figure
figure.subplot.bottom	: 0.1    	# the bottom of the subplots of the figure
figure.subplot.top	: 0.9    	# the top of the subplots of the figure
figure.subplot.wspace	: 0.2    	# the amount of width reserved for blank space between subplots
figure.subplot.hspace	: 0.2    	# the amount of height reserved for white space between subplots

################################IMAGES###########################################################
image.aspect : equal             	# equal | auto | a number
image.interpolation  : none
image.cmap   : RdGy_r             	# Red to Gray reversed.
image.lut    : 256               	# the size of the colormap lookup table
image.origin : upper             	# lower | upper
image.resample  : False

############################CONTOUR PLOTS##########################################################
contour.negative_linestyle :  dashed # dashed | solid

###########################SAVING FIGURES###########################################################
path.simplify : False  		  	# When True, simplify paths in vector backends, such as
                        	  	# PDF, PS and SVG
path.simplify_threshold : 0.1     	# The threshold of similarity below which
                                  	# vertices will be removed in the simplification
                                  	# process

savefig.dpi       : 300      		# figure dots per inch
savefig.facecolor : Transparent 	# figure facecolor when saving
savefig.edgecolor : white    		# figure edgecolor when saving








########################UNCONFIGURED SHIT############################################################
### TEXT

#font.serif          : Bitstream Vera Serif, New Century Schoolbook, Century
#Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New
#Roman, Times, Palatino, Charter, serif
#font.cursive        : Apple Chancery, Textile, Zapf Chancery, Sand, cursive
#font.fantasy        : Comic Sans MS, Chicago, Charcoal, Impact, Western, fantasy
#font.monospace      : Bitstream Vera Sans Mono, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace
### LaTeX customizations. See http://www.scipy.org/Wiki/Cookbook/Matplotlib/UsingTex
text.usetex         : False   # use latex for all text handling. The following fonts
                              # are supported through the usual rc parameter settings:
                              # new century schoolbook, bookman, times, palatino,
                              # zapf chancery, charter, serif, sans-serif, helvetica,
                              # avant garde, courier, monospace, computer modern roman,
                              # computer modern sans serif, computer modern typewriter
                              # If another font is desired which can loaded using the
                              # LaTeX \usepackage command, please inquire at the
                              # matplotlib mailing list
#text.latex.unicode : False # use "ucs" and "inputenc" LaTeX packages for handling
                            # unicode strings.
#text.latex.preamble :  # IMPROPER USE OF THIS FEATURE WILL LEAD TO LATEX FAILURES
                            # AND IS THEREFORE UNSUPPORTED. PLEASE DO NOT ASK FOR HELP
                            # IF THIS FEATURE DOES NOT DO WHAT YOU EXPECT IT TO.
                            # preamble is a comma separated list of LaTeX statements
                            # that are included in the LaTeX document preamble.
                            # An example:
                            # text.latex.preamble : \usepackage{bm},\usepackage{euler}
                            # The following packages are always loaded with usetex, so
                            # beware of package collisions: color, geometry, graphicx,
                            # type1cm, textcomp. Adobe Postscript (PSSNFS) font packages
                            # may also be loaded, depending on your font settings

#text.dvipnghack : None      # some versions of dvipng don't handle alpha
                             # channel properly.  Use True to correct
                             # and flush ~/.matplotlib/tex.cache
                             # before testing and False to force
                             # correction off.  None will try and
                             # guess based on your dvipng version

#text.markup         : 'plain'  # Affects how text, such as titles and labels, are
                                # interpreted by default.
                                # 'plain': As plain, unformatted text
				# 'tex': As TeX-like text.  Text between $'s will be
				# formatted as a TeX math expression.
				# This setting has no effect when text.usetex is True.
				# In that case, all text will be sent to TeX for
				# processing.

# The following settings allow you to select the fonts in math mode.
# They map from a TeX font name to a fontconfig font pattern.
# These settings are only used if mathtext.fontset is 'custom'.
# Note that this "custom" mode is unsupported and may go away in the
# future.
#mathtext.cal : cursive
#mathtext.rm  : serif
#mathtext.tt  : monospace
#mathtext.it  : serif:italic
#mathtext.bf  : serif:bold
#mathtext.sf  : sans
#mathtext.fontset : cm # Should be 'cm' (Computer Modern), 'stix',
                       # 'stixsans' or 'custom'
#mathtext.fallback_to_cm : True  # When True, use symbols from the Computer Modern
			         # fonts when a symbol can not be found in one of
				 # the custom math fonts.

#mathtext.default : it # The default font to use for math.
                       # Can be any of the LaTeX font names, including
                       # the special name "regular" for the same font
                       # used in regular text.




### Agg rendering
### Warning: experimental, 2008/10/10
#agg.path.chunksize : 0           # 0 to disable; values in the range
                                  # 10000 to 100000 can improve speed slightly
                                  # and prevent an Agg rendering failure
                                  # when plotting very large data sets,
                                  # especially if they are very gappy.
                                  # It may cause minor artifacts, though.
                                  # A value of 20000 is probably a good
                                  # starting point.

#cairo.format      : png      # png, ps, pdf, svg

# tk backend params
#tk.window_focus   : False    # Maintain shell focus for TkAgg
#tk.pythoninspect  : False    # tk sets PYTHONINSEPCT

# ps backend params
#ps.papersize      : letter   # auto, letter, legal, ledger, A0-A10, B0-B10
#ps.useafm         : False    # use of afm fonts, results in small files
#ps.usedistiller   : False    # can be: None, ghostscript or xpdf
                                          # Experimental: may produce smaller files.
                                          # xpdf intended for production of publication quality files,
                                          # but requires ghostscript, xpdf and ps2eps
#ps.distiller.res  : 6000      # dpi
#ps.fonttype       : 3         # Output Type 3 (Type3) or Type 42 (TrueType)

# pdf backend params
#pdf.compression   : 6 # integer from 0 to 9
                       # 0 disables compression (good for debugging)
#pdf.fonttype       : 3         # Output Type 3 (Type3) or Type 42 (TrueType)

# svg backend params
#svg.image_inline : True       # write raster image data directly into the svg file
#svg.image_noscale : False     # suppress scaling of raster data embedded in SVG
#svg.embed_char_paths : True       # embed character outlines in the SVG file

#Uncomment this section if the backend doesn't work in some GUI.
# backend_fallback: True
# numerix      : numpy  # numpy, Numeric or numarray
# interactive  : True
# toolbar      : toolbar2   # None | classic | toolbar2
# timezone     : UTC        # a pytz timezone string, eg US/Central or Europe/Paris

# docstring params
#docstring.hardcopy = False  # set this when you want to generate hardcopy docstring

# Set the verbose flags.  This controls how much information
# matplotlib gives you at runtime and where it goes.  The verbosity
# levels are: silent, helpful, debug, debug-annoying.  Any level is
# inclusive of all the levels below it.  If your setting is "debug",
# you'll get all the debug and helpful messages.  When submitting
# problems to the mailing-list, please set verbose to "helpful" or "debug"
# and paste the output into your report.
#
# The "fileo" gives the destination for any calls to verbose.report.
# These objects can a filename, or a filehandle like sys.stdout.
#
# You can override the rc default verbosity from the command line by
# giving the flags --verbose-LEVEL where LEVEL is one of the legal
# levels, eg --verbose-helpful.
#
# You can access the verbose instance in your code
#   from matplotlib import verbose.
#verbose.level  : silent      # one of silent, helpful, debug, debug-annoying
#verbose.fileo  : sys.stdout  # a log filename, sys.stdout or sys.stderr
